/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation 'com.github.joshjdevl.libsodiumjni:libsodium-jni:2.0.1'
    implementation 'net.i2p.crypto:eddsa:0.3.0'
    implementation("org.jetbrains.kotlinx:kotlinx-cli:0.3.1")
    implementation "org.kin.sdk.android:base:0.4.5"
    implementation 'org.json:json:20210307'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

application {
    // Define the main class for the application.
    mainClassName = 'cli.app.AppKt'
}

jar {
    manifest {
        attributes 'Main-Class': 'cli.app.AppKt'
    }
    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

//val jar by tasks.getting(Jar::class) {
//    manifest {
//        attributes["Main-Class"] = "ktor.demo.AppKt"
//    }
//    from(configurations.runtimeClasspath.get().map { if (it.isDirectory) it else zipTree(it) }) {
//        exclude("META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA")
//    }
//}