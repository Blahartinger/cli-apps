/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package cli.app

import kotlinx.cli.*
import org.kin.sdk.base.models.Key
import org.kin.sdk.base.models.asPrivateKey
import org.kin.sdk.base.models.asPublicKey
import org.kin.sdk.base.tools.Base58
import org.kin.stellarfork.KeyPair

fun main(args: Array<String>) {


    val parser = ArgParser("brutil")
    val output by parser.option(ArgType.String, "output", "o", "Output file")

    class Import : Subcommand("import", "Import ") {
        val jsonString by argument(ArgType.String, "json_data", "The json string from the QR Code data")
        val passphrase by argument(ArgType.String, "passphrase", "The passphrase used to encrypt the data")

        override fun execute() {
            val backupRestore = BackupRestoreImpl()
            with(
                backupRestore.importAccountBackup(
                    BackupRestoreImpl.AccountBackup(jsonString),
                    passphrase
                )
            ) {
                println("publicAddress: ${asPublicKey().stellarBase32Encode()}/${asPublicKey().base58Encode()} seed: ${asPrivateKey().stellarBase32Encode()}/${asPrivateKey().base58Encode()}")
            }
        }
    }

    class Export : Subcommand("export", "Export a private key") {
        val seed by argument(ArgType.String, "seed", "The seed key")
        val passphrase by argument(ArgType.String, "passphrase", "The passphrase used to encrypt the data")

        override fun execute() {
            val backupRestore = BackupRestoreImpl()
            println(backupRestore.exportWallet(KeyPair.fromSecretSeed(seed), passphrase))
        }
    }

    val import = Import()
    val export = Export()
    parser.subcommands(import, export)

    parser.parse(args)
}

object App {
    const val appName = "Backup & Restore CLI App"
    const val version = "0.0.1"
}